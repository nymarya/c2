void intercala (int p, int q, int r, int *v) 
{
   int *w;                                
   w = malloc ((r-p) * 8); 

   int i;
   i = p; 
   int j;
   j = q;                       
   int k;
   k = 0;                              

   loop
   {
      if(v[i] <= v[j])
      {
         w[k] = v[i];
         k=k+1;
         i=i+1;
      }
      else
      {
         w[k] = v[j];
         k=k+1;
         j=j+1;
      }

      break when(i < q && j < r);
   }

   loop
   {
      w[k] = v[i];
      k=k+1;
      i=i+1;
      break when(i < q);
   }

   loop
   {
      w[k] = v[j];
      k=k+1;
      i=i+1;
      break when(j < r);
   }

   i = p;

   loop
   {
      v[i] = w[i-p];
      i = i + 1;

      break when(i < r);
   }     

   free(w);                          
}

void mergesort (int p, int r, int *v)
{
   if (p < r-1) {                 
      int q;
      q = (p + r)/2;          
      mergesort (p, q, v);        
      mergesort (q, r, v);        
      intercala (p, q, r, v);     
   }
}
