/* main.c */

int divide(int *v, int p, int r){
  int pivot;
  pivot = v[r];
  int i;
  i = p;
  int j;
  j = p;
  int k;
  k = p;

  /* separa vetor de forma que v[p..j-1] <= v[j] < v[j+1..r] */
  loop {
    break when ( k >= r);
    if (v[k] <= c) {
      /* troca elementos */
      i = v[j];
      v[j] = v[k];
      v[k] = i;
      j = j+1; 
    }
    k = k+1;
  }
  t = v[j];
  v[j] = v[r];
  v[r] = t;
  return j;
}

void quicksort (int *v, int p, int r) {
   if (p < r) {                   
      int j;
      j = divide(v, p, r);   
      quicksort (v, p, j-1);      
      quicksort (v, j+1, r);      
   }
}


void main(void x){
  int* v;

  v = malloc (8 * 8);

  v[0] = 2;
  v[1] = 4;
  v[2] = 5;
  v[3] = 9;
  v[4] = 1;
  v[5] = 6;
  v[6] = 8;
  v[7] = 7;

  quicksort(v, 0, 7);
  print(v);
}